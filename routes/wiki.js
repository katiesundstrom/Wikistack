// "create a router; this entails requiring express, and calling the Router method on express, and assigning it to a variable
const express = require('express');
const router = express.Router();
// we specifically required addPage; if we had required all of views, we would have had to use object destructing when defining our constant.
const addPage = require('../views/addPage');
const layout = require('../views/layout');
const { Page } = require('../models/index');

// use router path rather than entire path; users have only been sent to this router if they already went to /wiki! So you only need characters that come after that.
router.get('/', (req, res) => {
  res.send(layout());
});

// // step 1 with post route; check and make sure you are creating the object correctly!
// router.post('/', (req, res) => {
//   res.json(req.body);
// });

router.post('/', async (req, res, next) => {

  const page = new Page({
    title: req.body.title,
    content: req.body.content
  });

  // make sure we only redirect *after* our save is complete!
  // note: `.save` returns a promise.

  try {
    await page.save();
    res.redirect('/');
  } catch (error) { next(error) }
});

// send the "addpage" html generated by the /views/addPage.js module. Do this by requiring it in a constant, and then invoking it.
router.get('/add', (req, res) => {
  res.send(addPage());
});


// export your router!
module.exports = router;
